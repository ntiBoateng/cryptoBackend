openapi: 3.0.1
info:
  title: Cryptocurrency Market APIs
  version: 1.0.0
  description: >-
    A basic API for working with the swagger tools to support routes in the
    server.
paths:
  /fetchallwatchlists:
    summary: Get all watchlist
    description: This path will fetch the list of all watchlist from the database.
    get:
      summary: Get all watchlists from the database.
      description: >-
        This path will retrieve the list of all watchlists saved in the
        database.
      operationId: get_watchlist
      responses:
        default:
          description: Default error sample response
          content:
            application/json:
              examples:
                watchlist sample:
                  value: >-
                    {"_id":{"$oid":"623ece91fc9e0d1da809bf83"},"user":{"$oid":"623ece0efc9e0d1da809bf80"},"coinid":"bitcoin","__v":0}
      tags:
        - watchlist
  /addwatchlist:
    summary: Add a new watchlist
    description: This path will add a new watchlist to the database.
    post:
      summary: Add a new watchlist
      description: This route will add a new watchlist to the database.
      operationId: post_watchlist
      requestBody:
        description: A new watchlist object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/watchlist'
      responses:
        default:
          description: Default error sample response
          content:
            application/json:
              examples:
                watchlist sample:
                  value: >-
                    {"_id":{"$oid":"623ece91fc9e0d1da809bf83"},"user":{"$oid":"623ece0efc9e0d1da809bf80"},"coinid":"bitcoin","__v":0}
      tags:
        - watchlist
  /updatewatchlist/:id:
    summary: Update a watchlist
    description: This path will be used to update an existing watchlist in the database.
    put:
      summary: Update a watchlist
      description: This route will update an existing watchlist from the database.,
      operationId: put_watchlist
      responses:
        default:
          description: Default error sample response
          content:
            application/json:
              examples:
                watchlist sample:
                  value: >-
                    {"_id":{"$oid":"623ece91fc9e0d1da809bf83"},"user":{"$oid":"623ece0efc9e0d1da809bf80"},"coinid":"bitcoin","__v":0}
      tags:
        - watchlist
  /deletewatchlist/:id:
    summary: Delete a watchlist
    description: This path will be used to delete an existing watchlist in the database.
    delete:
      summary: Delete a watchlist
      description: This path will delete an existing watchlist from the database.
      operationId: delete_watchlist
      responses:
        default:
          description: Default error sample response
          content:
            text/plain; charset=utf-8:
              examples:
                watchlist:
                  value: watchlist deleted!
      tags:
        - watchlist
  /fetchallportfolios:
    summary: Get all portfolios
    description: This path retrieves the list of all portfolios in the database.
    get:
      summary: Get all portfolios
      description: This path will get all portfolios from the database
      operationId: get_portfolio
      responses:
        default:
          description: Default error sample response
          content:
            application/json:
              examples:
                portfolio sample:
                  value: >-
                    {"_id":{"$oid":"623f110c2bda81ea7e809e06"},"user":{"$oid":"623ece0efc9e0d1da809bf80"},"coinid":"bitcoin","amount":0.4,"__v":0}
      tags:
        - portfolio
  /addportfolio:
    summary: Add a new portfolio
    description: This path will create a new portfolio and add to the database.
    post:
      summary: Add portfolio
      description: This path will add a new portfolio to the database
      operationId: post_portfolio
      requestBody:
        description: A new portfolio object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/portfolio'
      responses:
        default:
          description: Default error sample response
          content:
            application/json:
              examples:
                post sample:
                  value: >-
                    {"_id":{"$oid":"623f110c2bda81ea7e809e06"},"user":{"$oid":"623ece0efc9e0d1da809bf80"},"coinid":"bitcoin","amount":0.4,"__v":0}
      tags:
        - portfolio
  /updateportfolio/:id:
    summary: Update a portfolio
    description: This path will update an existing portfolio in the database.
    put:
      summary: Update a portfolio
      description: This path will update an existing portfolio.
      operationId: put_portfolio
      responses:
        default:
          description: Default error sample response
          content:
            application/json:
              examples:
                update sample:
                  value: >-
                    {"_id":{"$oid":"623f110c2bda81ea7e809e06"},"user":{"$oid":"623ece0efc9e0d1da809bf80"},"coinid":"bitcoin","amount":0.4,"__v":0}
      tags:
        - portfolio
  /deleteportfolio/:id:
    summary: Delete a portfolio
    description: This path will delete an existing portfolio from the database.
    delete:
      summary: Delete a portfolio
      description: This path will delete an existing portfolio from the database.
      operationId: delete_portfolio
      responses:
        default:
          description: Default error sample response
          content:
            application/json:
              examples:
                delete sample:
                  value: >-
                    {"_id":{"$oid":"623f110c2bda81ea7e809e06"},"user":{"$oid":"623ece0efc9e0d1da809bf80"},"coinid":"bitcoin","amount":0.4,"__v":0}
      tags:
        - portfolio
components:
  schemas:
    watchlist:
      type: object
      properties:
        id:
          type: string
        coinid:
          type: string
      xml:
        name: watchlist
    portfolio:
      type: object
      properties:
        id:
          type: string
        coinid:
          type: string
        amount:
          type: number
      xml:
        name: portfolio
